## --- Markdown grammar specifications ---------------------------------------
##
## https://tools.ietf.org/html/rfc7764 (Markdown specs)
##
## https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/user/markdown.md#inline-diff
## https://docs.gitlab.com/ee/user/markdown.html
## https://help.github.com/articles/basic-writing-and-formatting-syntax/
##

<MD text>                       ::= $line.start=index; <MD line> <MD text>          ### ok
                                 | EPS

<MD line>                       ::= <block elements>                                ### ok
                                 |  <space-starting elements>
                                 |  <text with span elements>


## --- Elements --------------------------------------------------------------

<block elements>                ::= <line or paragraph end>    ### ok
                                 |  <blockquote>
                                 |  <header atx>
                                 |  <list>
                                 |  <horizontal rule>
                                 |  <link or reference>
                                 |  <image>
 
 
<space-starting elements>       ::= ' ' <space elements'>   ### ok
                                 |  '\t' <code block>
<space elements'>               ::= ' ' <space elements''>  ### ok
                                 |  '\t' <code block>
                                 |  <maybe star>
                                 |  <maybe underscore>
                                 |  <text with span elements>
<space elements''>              ::= ' ' <space elements'''> ### ok
                                 |  '\t' <code block>
                                 |  '\n'                                                ## breakline! - CAUTION: maybe context sensitive... TO BE CHECKED!!!
                                 |  <maybe star>
                                 |  <maybe underscore>
                                 |  <text with span elements>
<space elements'''>             ::= ' ' <code block>         ### ok
                                 |  '\t' <code block>
                                 |  <maybe star>
                                 |  <maybe underscore>
                                 |  <text with span elements>

                                 
<text with span elements>       ::= <html entity> <maybe setext header> ### ok
                                 |  <html tag or automatic link> <maybe setext header>
                                 |  <emphasis or strong style> <maybe setext header>
                                 |  <inlined code> <maybe setext header>
                                 |  <escape> <maybe setext header>
                                 |  <any chars but & < * _ ` \\ \n> <maybe setext header>




## --- Markdown Tags ---------------------------------------------------------

<automatic link end>            ::= <any chars but space \> >  '>'  ### ok

<blockquotes>                   ::= "> " $bq.start=index, bq.level=1; <blockquotes'>    ### ok
<blockquotes'>                  ::= "> " $bq.level++; <blockquotes'>    ### ok
								 |  $bq.end=index; <text with span elements> <blockquotes">
<blockquotes">                  ::= <text with span elements> <blockquotes">    ### ok
                                 |  <line or paragraph end> $mark(bq);

<closing html tag>              ::= <any chars but \> \\n > $htal.verify(index); '>'    ### ok - TO BE CHECKED

<code block>                    ::= <text with span elements> <code block'> ### ok
<code block'>                   ::= <text with span elements> <code block'> ### ok
                                 |  <line or paragraph end>

<emph or strong *>              ::= '*' $mark(Strng(index-2)); <any chars but *> "**" $mark(Strng(index-2));    ### ok
								 |  $mark(Emph(index-1)); <any chars but *> '*' $mark(Emph(index-1));

<emph or strong _>              ::= '_' $mark(Strng(es.start)); <any chars but _> "__" $mark(Strng(index-2));   ### ok
								 |  $mark(Emph(index-1)); <any chars but _> '_' $mark(Emph(index-1));


<emphasis or strong style>      ::= '*' <emph or strong *>  ### ok
                                 |  '_' <emph or strong _>

<escape>                        ::= '\\' <escaped char> ### ok
<escaped char>                  ::= '\\'  |  '`'  |  '*'  |  '_'  |  '{'    ### ok
                                 |  '}'   |  '['  |  ']'  |  '('  |  ')'
                                 |  '#'   |  '+'  |  '-'  |  '.'  |  '!' $mark(Esc(index-1));

<header atx>                    ::= '#' $hdr=HdrAtx(index); <header atx'>   ## ok
<header atx'>                   ::= '#' $hdr.level++; <header atx'> ### ok
                                 |  ' ' $mark(hdr); <text with span elements> $mark(HdrEnd(index));

<header setext>                 ::= '=' $mark(HdrStxH1(index)); <header setext h1>  ### ok
                                 |  '-' $mark(HdrStxH2(index)); <header setext h2>
                  
<header setext h1>              ::= '=' <skip spaces> <header setext h1'>   ### ok
<header setext h1'>             ::= '=' <skip spaces> <header setext h1'>
                                 |  <line or paragraphe end> $mark(HdrEndH1(index));    ### ok

<header setext h2>              ::= '-' <skip spaces> <header setext h2'>   ### ok
<header setext h2'>             ::= '-' <skip spaces> <header setext h2'>   ### ok
                                 |  <line or paragraphe end> $mark(HdrEndH2(index));

<horizontal rule>               ::= <hrule star>    ### ok
                                 |  <hrule hyphen>

<hrule hyphen>                  ::= '-' <skip spaces> '-' <skip spaces> '-' <hrule hyphen'> ### ok
<hrule hyphen'>                 ::= ' ' <skip spaces> '-' <hrule hyphen'>   ### ok
                                 |  <line or paragraphe end> $mark(HR(line.start,index);

<hrule star>                    ::= '*' <skip spaces> '*' <skip spaces> '*' <hrule star'>   ### ok
<hrule star'>                   ::= <skip spaces> '*' <hrule star'> ### ok
                                 |  <line or paragraphe end> $mark(HR(line.start,index);

<html entity>                   ::= '&' $he.start=index; <any char but space or ';'> ';' $he.end=index, mark(he); ### ok

<html tag or automatic link>    ::= '<' $htal.start=index; <html tag or automatic link'>    ### ok
<html tag or automatic link'>   ::= '/' <closing html tag> $htal.end=index, mark(HT(htal)); ### ok
                                 |  <any chars but : / space \> > $htal.settag(index); <html tag or automatic link">
<html tag or automatic link">   ::= "://" $htal.prefixend=index; <automatic link end> $htal.end=index, mark(AL(htal));  ### ok
                                 |  "/>" $htal.end=index, mark(HT(htal));
                                 |  '>' $htal.end=index, mark(HT(htal));
                                 |  ' ' <any chars but : / \> > <html tag or automatic link">

<image>                         ::= '!' $im.start=index; <link> ### ok

<inlined code>                  ::= '`' $ic.start=index, ic.dbl=False; <inlined code'>  ### ok
<inlined code'>                 ::= '`' $ic.dbl=True; <inlined code''>  ### ok
								 |  <any char but `> '`' $ic.end=index, mark(ic);
<inlined code''>                ::= <any chars but `> '`' <inlined code '''>    ### ok
<inlined code '''>				::= '`' $ic.end=index, mark(ic);    ### ok
								 |  <inlined code''>

<inlined link>                  ::= '(' $il.start=index; <url> $il.url=url; <title> $il.title=title; ')' $il.end=index, mark(il);   ### ok
                         
<line or paragraph end>         ::= '\n' <line or paragraph end'>   ### ok
                                 |  <ENDOFTEXT> $finalize();            ## line end
<line or paragraph end'>        ::= '\n' <line or paragraph end'>   ### ok       ## paragraph end
                                 |  <ENDOFTEXT> $finalize();            ## paragraph end
                                 |  EPS $line.start=index;              ## line or paragraph end, context dependent

<link>                          ::= <inlined link>  ### ok
                                 |  <referenced link>

<link or reference>             ::= '[' $lire.start=index; <linked text> ']' $lire.end=index;  <link or reference'>     ### ok
<link or reference'>            ::= ':' <reference> $markRef(url,refTtl);   ### ok
                                 |  <link> $mark(lire,link);

<linked text>                   ::= <any chars but ]>   ### ok

<list>                          ::= <ordered list>  ### ok
                                 |  <unordered list>                    ## CAUTION: "paragraphed" list items are not addressed here

<list bullet>                   ::= '* ' ### ok
                                 |  '+ '
                                 |  '- '

<max 3 spaces>                  ::= ' ' <max 3 spaces'> ### ok
                                 |  EPS
<max 3 spaces'>                 ::= ' ' <max 3 spaces''>    ### ok
                                 |  EPS
<max 3 spaces''>                ::= ' ' ### ok
                                 |  EPS

<maybe setext header>           ::= '\n' <maybe setext header'> ### ok
                                 |  EPS
<maybe setext header'>          ::= <header setext> ### ok
                                 |  EPS

<maybe star>                    ::= '*' <maybe star'>   ### ok
<maybe star'>                   ::= ' ' $mark(Str(index-1));    ### ok
                                 |  <text with span elements>

<maybe underscore>              ::= '_' <maybe underscore'> ### ok
<maybe underscore'>				::= ' ' $mark(Und(index-1));    ### ok
                                 |  <text with span elements>

<ordered item>                  ::= $oi.start=index; <number> '.' $oi.end=index, mark(oi); <text with span elements>    ### ok

<ordered list>                  ::= <ordered item> $ol.start=index; <ordered list'> ### ok
<ordered list'>                 ::= <ordered item> <ordered list'>  ### ok
                                 | <line or paragraph end> $ol.end=index, mark(ol);

<reference>                     ::= <skip spaces> <url> <skip spaces> <reference title> '\n'    ### ok

<referenced link>               ::= <skip spaces> '[' <referenced link'> ']'    ### ok
<reference linked'>             ::= <any chars but ]>   ### ok
                                 |  EPS

<reference title>               ::= '\n' <max 3 spaces> <reference title'>  ### ok  ## CAUTION: may lead to backward scanning if no '"' in next 4 chars
                                 |  <reference title'>
<reference title'>              ::= '"' $refTtl.start=index; <any chars but newline and "> '"' $refTtl.end=index; <skip spaces> '\n'    ### ok    ## (maybe end-of-line is not needed)

<skip spaces>                   ::= ' ' <skip spaces>
                                 |  EPS

<title>                         ::= '"' $title.start=index; <any chars but newline and "> '"' $title.end=index; ### ok
                                 |  EPS $title=NULL;    ### added

<unordered item>                ::= <list bullet> $mark(Uli(index)); <text with span elements>  ### ok

<unordered list>                ::= <unordered item> $ul.start=index; <unordered list'> ### ok
<unordered list'>               ::= <unordered item> <unordered list'>  ### ok
                                 |  <line or paragraph end> $ul.end=index, mark(ul);

<url>                           ::= $url.start=index; <alphanum chars> <url'>   ### ok
<url'>                          ::= "://" <any chars but ) and "> $url.end=index;     ### replaced ] w. )
